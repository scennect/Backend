# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

# Repo Action 페이지에 나타날 이름
name: Spring Boot & Gradle CI/CD

# Event Trigger
# dev branch 에 push 또는 pull request 가 발생할 경우 동작
# branch 단위 외에도, tag 나 cron 식 등을 사용할 수 있음
on:
  push:
    branches: [ dev ]

jobs:
  build:
    # 실행 환경 지정
    runs-on: ubuntu-24.04

    # Task 의 sequence 를 명시한다.
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
        ## create application.yaml
      - name: make application.yml
        run: |
          ## create application.yml
          # mkdir ./src/main/resources
          # static 파일때문에 이미 resources 폴더가 존해함
          cd ./src/main/resources
          # application.yml 파일 생성
          touch ./application.yml
          # GitHub-Actions 에서 설정한 값을 application.yaml 파일에 쓰기
          echo "${{ secrets.APPLICATION }}" >> ./application.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      ## 웹 이미지 빌드 및 도커허브에 push
      - name: web docker build and push
        run: |
          # docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -t ${{ secrets.DOCKER_REPO }}/scennect-repository .
          docker push ${{ secrets.DOCKER_REPO }}/scennect-repository

      ## docker compose up
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST_ID }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker-compose down
            sudo docker pull ${{ secrets.DOCKER_REPO }}/scennect-server
            sudo docker-compose up -d
            sudo docker image prune -f